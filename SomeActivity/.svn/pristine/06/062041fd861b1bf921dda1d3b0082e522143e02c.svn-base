package cn.suishou.some.talk.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import cn.suishou.some.db.SQL;
import cn.suishou.some.talk.dao.MessageDao;
import cn.suishou.some.talk.bean.Message;

public class MessageDaoImpl implements MessageDao {

	@Override
	public void saveMessage(Message msg) {
		Connection conn = null;
		PreparedStatement ps = null;
		// insert into message(generateTime,message,ip,platform,app_version,nick,uid,aid) values(now(),'hello','192.168.110.110','huiwei','app0001','小菜','u001',1);
		String sql = "insert into message(generateTime,message,ip,platform,app_version,nick,uid,aid) values(?,?,?,?,?,?,?,?)";
		
		try {
			conn = SQL.getInstance().getConnection();
			ps = conn.prepareStatement(sql);
			ps.setTimestamp(1, msg.getGenerateTime());
			ps.setString(2, msg.getMessage());
			ps.setString(3, msg.getIp());
			ps.setString(4, msg.getPlatform());
			ps.setString(5, msg.getVersion());
			ps.setString(6, msg.getU_nick());
			ps.setString(7, msg.getUid());
			ps.setInt(8, msg.getAid());
			ps.execute();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			SQL.getInstance().release(ps, conn);
		}
	}

	@Override
	public List<Message> getListMessage(String lastTime) {
		Connection conn = null;
		PreparedStatement ps = null;
		List<Message> msgList = null;
		String sql = "select nick,generateTime,message from message where generateTime > ?";
		try {
			conn = SQL.getInstance().getConnection();
			ps = conn.prepareStatement(sql);
			Timestamp time = Timestamp.valueOf(lastTime);
			ps.setTimestamp(1, time);
			ResultSet rs = ps.executeQuery();
			msgList = new ArrayList<Message>();
			while (rs.next()){
				Message msg = new Message();
				msg.setU_nick(rs.getString("nick"));
				msg.setMessage(rs.getString("message"));
				msg.setGenerateTime(rs.getTimestamp("generateTime"));
				msgList.add(msg);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			SQL.getInstance().release(ps, conn);
		}
		return msgList;
	}

	@Override
	public List<Message> getAllMessage() {
		Connection conn = null;
		PreparedStatement ps = null;
		List<Message> msgList = null;
		String sql = "select nick,generateTime,message from message ";
		try {
			conn = SQL.getInstance().getConnection();
			ps = conn.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();
			msgList = new ArrayList<Message>();
			while (rs.next()){
				Message msg = new Message();
				msg.setU_nick(rs.getString("nick"));
				msg.setMessage(rs.getString("message"));
				msg.setGenerateTime(rs.getTimestamp("generateTime"));
				msgList.add(msg);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			SQL.getInstance().release(ps, conn);
		}
		return msgList;
	}

}
